(window.webpackJsonp=window.webpackJsonp||[]).push([[42],{315:function(t,a,e){"use strict";e.r(a);var s=e(14),i=Object(s.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"配置-git-的用户名和邮箱"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#配置-git-的用户名和邮箱"}},[t._v("#")]),t._v(" 配置 Git 的用户名和邮箱")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("git config user.name 'username1' \ngit config user.email test1@qq.com\n")])])]),a("h2",{attrs:{id:"git-add"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-add"}},[t._v("#")]),t._v(" git add")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("# 添加某个文件到暂存区，后面可以跟多个文件，以空格区分\ngit add xxx\n# 添加当前更改的所有文件到暂存区。\ngit add .\n")])])]),a("h2",{attrs:{id:"git-commit"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-commit"}},[t._v("#")]),t._v(" git commit")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('# 提交暂存的更改，会新开编辑器进行编辑\ngit commit \n# 提交暂存的更改，并记录下备注\ngit commit -m "you message"\n# 等同于 git add . && git commit -m\ngit commit -am\n# 对最近一次的提交的信息进行修改,此操作会修改commit的hash值\ngit commit --amend\n')])])]),a("h2",{attrs:{id:"git-pull"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-pull"}},[t._v("#")]),t._v(" git pull")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("# 从远程仓库拉取代码并合并到本地，可简写为 git pull 等同于 git fetch && git merge \ngit pull <远程主机名> <远程分支名>:<本地分支名>\n# 使用rebase的模式进行合并\ngit pull --rebase <远程主机名> <远程分支名>:<本地分支名>\n")])])]),a("h2",{attrs:{id:"git-fetch"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-fetch"}},[t._v("#")]),t._v(" git fetch")]),t._v(" "),a("p",[t._v("与 git pull 不同的是 git fetch 操作仅仅只会拉取远程的更改，不会自动进行 merge 操作。对你当前的代码没有影响")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("# 获取远程仓库特定分支的更新\ngit fetch <远程主机名> <分支名>\n# 获取远程仓库所有分支的更新\ngit fetch --all\n")])])]),a("h2",{attrs:{id:"修改最近一次提交的作者"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#修改最近一次提交的作者"}},[t._v("#")]),t._v(" 修改最近一次提交的作者")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v(" git commit "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("amend "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("reset"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("author\n")])])]),a("h2",{attrs:{id:"撤销add"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#撤销add"}},[t._v("#")]),t._v(" 撤销add")]),t._v(" "),a("p",[a("strong",[t._v("git add 添加了多余文件")]),t._v("\ngit add .  表示当前目录所有文件，不小心就会提交其他文件\ngit add 如果添加了错误的文件的话\n撤销操作\ngit status 先看一下add 中的文件\ngit reset HEAD 如果后面什么都不跟的话 就是上一次add 里面的全部撤销了\ngit reset HEAD XXX.py 就是对某个py文件进行撤销了\ngit reset HEAD file  即使对file文件夹进行撤销")]),t._v(" "),a("h2",{attrs:{id:"如何删除某一个commit"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如何删除某一个commit"}},[t._v("#")]),t._v(" 如何删除某一个commit")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("git log\n\nGit rebase -i commitId\n")])])]),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),a("p",[t._v("想删除的前一次提交的commitId\nPick 改成drop\n保存退出 Esc:wq")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("git push origin master --force\n")])])]),a("h2",{attrs:{id:"如何撤销上一次commit"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如何撤销上一次commit"}},[t._v("#")]),t._v(" 如何撤销上一次commit")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),a("p",[t._v("取消上一次commit,加上--hard则不保留当前更改")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("git reset --hard HEAD~1\n")])])]),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("git push --force\n")])])]),a("h2",{attrs:{id:"如何撤销git-reset-hard"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如何撤销git-reset-hard"}},[t._v("#")]),t._v(" 如何撤销git reset --hard")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("git reflog\n")])])]),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("git reset --hard commitId\n")])])]),a("h2",{attrs:{id:"暂时存储"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#暂时存储"}},[t._v("#")]),t._v(" 暂时存储")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('git stash //把本地的改动暂存起来\ngit stash save "message" 执行存储时，添加备注，方便查找。\ngit stash pop // 应用最近一次暂存的修改，并删除暂存的记录\ngit stash apply  // 应用某个存储,但不会把存储从存储列表中删除，默认使用第一个存储,即 stash@{0}，如果要使用其他个，git stash apply stash@{$num} 。\ngit stash list // 查看 stash 有哪些存储\ngit stash clear // 删除所有缓存的 stash\n')])])]),a("h2",{attrs:{id:"远程覆盖本地"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#远程覆盖本地"}},[t._v("#")]),t._v(" 远程覆盖本地")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("$ git fetch --all\n$ git reset --hard origin/master \n$ git pull\n")])])]),a("h2",{attrs:{id:"本地覆盖远程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#本地覆盖远程"}},[t._v("#")]),t._v(" 本地覆盖远程")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("git push origin master -f\n")])])]),a("h2",{attrs:{id:"修改commit信息"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#修改commit信息"}},[t._v("#")]),t._v(" 修改commit信息")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),a("p",[t._v("‘C’进入VIM编辑状态，修改完成。esc退出编辑，两次大写字母'Z'保存并退出")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("$ git commit --amend\n")])])]),a("h2",{attrs:{id:"github"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#github"}},[t._v("#")]),t._v(" github")]),t._v(" "),a("p",[t._v("建立git仓库，cd到你的本地项目根目录下，执行git命令")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("git init\n")])])]),a("p",[t._v("将项目的所有文件添加到仓库中")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("git add .\n")])])]),a("p",[t._v("将add的文件commit到仓库")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('git commit -m "注释语句"\n')])])]),a("p",[t._v("去github上创建自己的Repository\n复制地址git@github.com:iamporia/***.git\n将本地的仓库关联到github上")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("git remote add origin git@github.com:iamporia/***.git\n")])])]),a("p",[t._v("上传github之前，要先pull一下")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("git pull origin master\n")])])]),a("p",[t._v("上传代码到github远程仓库")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("git push -u origin master\n")])])]),a("p",[t._v("查看尚未暂存的文件更新了哪些部分")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("git diff\n")])])]),a("p",[t._v("查看已暂存的将要添加到下次提交里的内容")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("git diff --cached 或者 git diff --staged\n")])])]),a("h2",{attrs:{id:"移除文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#移除文件"}},[t._v("#")]),t._v(" 移除文件")]),t._v(" "),a("p",[t._v("要从已跟踪文件清单中移除")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("git rm filename\n")])])]),a("p",[t._v("如果删除之前修改过并且已经放到暂存区域的话,force强制")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("git rm filename -f\n")])])]),a("p",[t._v("git仓库中删除，工作区仍保留")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("git rm --cached filename\n")])])]),a("h2",{attrs:{id:"移动文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#移动文件"}},[t._v("#")]),t._v(" 移动文件")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("git mv file to directory\n")])])]),a("p",[t._v("rename")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("git mv file_from file_to\n")])])]),a("p",[t._v("其实，运行 git mv 就相当于运行了下面三条命令：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("$ mv README.md README\n$ git rm README.md\n$ git add README\n")])])]),a("h2",{attrs:{id:"查看历史"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#查看历史"}},[t._v("#")]),t._v(" 查看历史")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("git log\n")])])]),a("ul",[a("li",[a("strong",[t._v("-p")]),t._v(" 显示每次提交的内容差异")]),t._v(" "),a("li",[a("strong",[t._v("-2")]),t._v(" 显示最近两次提交")]),t._v(" "),a("li",[a("strong",[t._v("--stat")]),t._v(" 显示提交的简略的统计信息")]),t._v(" "),a("li",[a("strong",[t._v("--pretty")]),t._v(" 指定使用不同于默认格式的方式展示提交历史，子选项oneline，short，full，fuller，format")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("git log --pretty=oneline\n")])])]),a("h2",{attrs:{id:"撤销"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#撤销"}},[t._v("#")]),t._v(" 撤销")]),t._v(" "),a("ul",[a("li",[t._v("取消所有暂存的文件")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("git reset . 或者 git reset HEAD .\n")])])]),a("ul",[a("li",[t._v("取消暂存的文件")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("git reset HEAD -filename\n")])])]),a("ul",[a("li",[t._v("你提交后发现忘记了暂存某些需要的修改，可以像下面这样操作：")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("$ git commit -m 'initial commit'\n$ git add forgotten_file\n$ git commit --amend\n")])])]),a("p",[t._v("最终你只会有一个提交——第二次提交将代替第一次提交的结果。")]),t._v(" "),a("ul",[a("li",[t._v("撤消对文件的修改")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("git checkout -- filename\n")])])]),a("h2",{attrs:{id:"远程仓库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#远程仓库"}},[t._v("#")]),t._v(" 远程仓库")]),t._v(" "),a("ul",[a("li",[t._v("查看远程仓库\n"),a("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2020/png/292785/1607917245342-8c11739c-d421-4bab-a7ed-b0f45eef9dc9.png#height=184&id=Iu3le&originHeight=184&originWidth=692&originalType=binary&ratio=1&rotation=0&showTitle=false&status=done&style=none&title=&width=692",alt:""}})]),t._v(" "),a("li",[t._v("添加远程仓库")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("git remote add <shortname> <url>\n")])])]),a("p",[t._v("字符串 shortname 来代替整个 URL，拉取仓库信息\ngit fetch shortname")]),t._v(" "),a("ul",[a("li",[t._v("从远程仓库中抓取与拉取")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("git fetch [remote-name]\n")])])]),a("p",[t._v("这个命令会访问远程仓库，从中拉取所有你还没有的数据。 执行完成后，你将会拥有那个远程仓库中所有分支的引用，可以随时合并或查看。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("git fetch origin\n")])])]),a("p",[t._v("如果你使用 clone 命令克隆了一个仓库，命令会自动将其添加为远程仓库并默认以 “origin” 为简写。 所以，git fetch origin 会抓取克隆（或上一次抓取）后新推送的所有工作。 必须注意 git fetch 命令会将数据拉取到你的本地仓库——它并不会自动合并或修改你当前的工作。 当准备好时你必须手动将其合并入你的工作。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("git pull\n")])])]),a("p",[t._v("如果你有一个分支设置为跟踪一个远程分支,可以使用 git pull 命令来自动的抓取然后合并远程分支到当前分支。")]),t._v(" "),a("ul",[a("li",[t._v("推送到远程仓库")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("git push [remote-name] [branch-name]\n")])])]),a("ul",[a("li",[t._v("查看某个远程仓库")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("git remote show [remote-name]\n")])])]),a("ul",[a("li",[t._v("远程仓库的移除与重命名")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("git remote rename pb paul\n")])])]),a("p",[t._v("值得注意的是这同样也会修改你的远程分支名字。 那些过去引用 pb/master 的现在会引用 paul/master")]),t._v(" "),a("ul",[a("li",[t._v("移除一个远程仓库\n"),a("code",[t._v("git remote rm [remote-name]")])])]),t._v(" "),a("h2",{attrs:{id:"git-alias"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-alias"}},[t._v("#")]),t._v(" git alias")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("git config --global alias.co checkout\n")])])]),a("h2",{attrs:{id:"git-拉取远程分支到本地"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-拉取远程分支到本地"}},[t._v("#")]),t._v(" git 拉取远程分支到本地")]),t._v(" "),a("p",[t._v("1.把远程分支拉到本地\n"),a("code",[t._v("git fetch origin dev（dev为远程仓库的分支名）")]),t._v("\n2.在本地创建分支dev并切换到该分支\n"),a("code",[t._v("git checkout -b dev(本地分支名称)")]),t._v(" origin/dev(远程分支名称)\n3.把某个分支上的内容都拉取到本地\n"),a("code",[t._v("git pull origin dev(远程分支名称)")])]),t._v(" "),a("h2",{attrs:{id:"将a分支上的commit-复制到b分支上"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#将a分支上的commit-复制到b分支上"}},[t._v("#")]),t._v(" 将A分支上的commit 复制到B分支上")]),t._v(" "),a("p",[t._v("方式一 cherry-pick 推荐")]),t._v(" "),a("ul",[a("li",[t._v("git checkout B")]),t._v(" "),a("li",[t._v("git cherry-pick commitID")])]),t._v(" "),a("p",[t._v("方式二 rebase\ngit rebase   [startpoint]   [endpoint]  --onto  [branchName]\n"),a("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2022/png/292785/1648101985381-a6be5926-5635-4e09-a943-99c11765224c.png#clientId=u1ef2e941-ab25-4&from=paste&height=206&id=ueaa0f3a5&name=image.png&originHeight=206&originWidth=1068&originalType=binary&ratio=1&rotation=0&showTitle=false&size=44685&status=done&style=none&taskId=u0fe3e1ef-9df9-445f-9d8c-964f3b501d3&title=&width=1068",alt:"image.png"}}),t._v(" "),a("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2022/png/292785/1648101967741-13d132c0-c0d6-4d65-ae35-2c5404e1ac8c.png#clientId=u1ef2e941-ab25-4&from=paste&height=372&id=u89ee9c5e&name=image.png&originHeight=372&originWidth=1314&originalType=binary&ratio=1&rotation=0&showTitle=false&size=117612&status=done&style=none&taskId=u2617d594-4108-4e53-b776-f68c1366216&title=&width=1314",alt:"image.png"}}),t._v(" "),a("strong",[t._v("git rebase ad85dc7 30510af --onto main")]),a("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2022/png/292785/1648102604823-825a9f71-4449-48dc-964e-d533d6392b05.png#clientId=u1ef2e941-ab25-4&from=paste&height=318&id=u23f372fe&name=image.png&originHeight=318&originWidth=930&originalType=binary&ratio=1&rotation=0&showTitle=false&size=90721&status=done&style=none&taskId=u0dba77c2-48d3-49c6-aa9b-f3fde4d0ad3&title=&width=930",alt:"image.png"}}),t._v("\n所以，虽然此时HEAD所指向的内容正是我们所需要的，但是main分支是没有任何变化的，git只是将dev1-dev4部分的提交内容复制一份粘贴到了master所指向的提交后面，我们需要做的就是将main所指向的提交id设置为当前HEAD所指向的提交id就可以了，即:\n"),a("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2022/png/292785/1648102767148-940b305a-2806-4577-aade-647d86a9c678.png#clientId=u1ef2e941-ab25-4&from=paste&height=299&id=iRlSf&name=image.png&originHeight=314&originWidth=798&originalType=binary&ratio=1&rotation=0&showTitle=false&size=102696&status=done&style=none&taskId=uec0585ab-ca7b-4c75-8029-a7e32700476&title=&width=760",alt:"image.png"}})]),t._v(" "),a("h2",{attrs:{id:"修改已经提交并push后的commit注释"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#修改已经提交并push后的commit注释"}},[t._v("#")]),t._v(" 修改已经提交并push后的commit注释")]),t._v(" "),a("p",[t._v("把代码push到远程后，发现commit的注释居然多了几个错别字，不行，必须改了！\n搜索了一些答案之后自己做了一个总结如下：")]),t._v(" "),a("ul",[a("li",[t._v("修改倒数第1次的commit")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("$ git rebase -i HEAD~1\n")])])]),a("ul",[a("li",[t._v("修改pick为edit")]),t._v(" "),a("li",[t._v("回车后进入一个页面，\n按i进入编辑模式，\n将要修改的那一条的pick修改成edit，\n按esc退出编辑模式，输入:wq保存并退出"),a("br")]),t._v(" "),a("li",[t._v("修改commit注释内容")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("git commit --amend\n")])])]),a("p",[t._v("按i进入编辑模式，修改内容，退出编辑模式，输入:wq保存并退出")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("git rebase --continue\n")])])]),a("ul",[a("li",[t._v("强制push")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("git push --force github\n")])])]),a("h2",{attrs:{id:"撤销某次提交"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#撤销某次提交"}},[t._v("#")]),t._v(" 撤销某次提交")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("普通撤销")]),t._v(" "),a("p",[a("code",[t._v("git revert commit-id")]),t._v(" 版本是叠加的  会生成一个commit记录（跟reset不一样）\n"),a("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2021/png/292785/1616150182838-d8528a81-e250-44e3-8bbd-2f287b422de2.png#height=56&id=BknrE&name=image.png&originHeight=57&originWidth=447&originalType=binary&ratio=1&rotation=0&showTitle=false&size=10859&status=done&style=none&title=&width=442",alt:"image.png"}})])]),t._v(" "),a("li",[a("p",[t._v("撤销merge的commit")]),t._v(" "),a("p",[a("code",[t._v("git revert commit-id -m 1")])])])]),t._v(" "),a("h2",{attrs:{id:"git-branch"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-branch"}},[t._v("#")]),t._v(" git branch")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("# 新建本地分支，但不切换\ngit branch <branch-name> \n# 查看本地分支\ngit branch\n# 查看远程分支\ngit branch -r\n# 查看本地和远程分支\ngit branch -a\n# 删除本地分支\ngit branch -D <branch-nane>\n# 重新命名分支\ngit branch -m <old-branch-name> <new-branch-name>\n# 删除远程分支\ngit push origin --delete your_branch\n")])])]),a("h3",{attrs:{id:"远程已经删除的分支-本地-git-branch-a-还是能查看到"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#远程已经删除的分支-本地-git-branch-a-还是能查看到"}},[t._v("#")]),t._v(" 远程已经删除的分支 本地 git branch -a 还是能查看到")]),t._v(" "),a("div",{staticClass:"language-git fetch origin --prune extra-class"},[a("pre",{pre:!0,attrs:{class:"language-git"}},[a("code")])]),a("h2",{attrs:{id:"本地修改不想提交的情况下用stash暂存"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#本地修改不想提交的情况下用stash暂存"}},[t._v("#")]),t._v(" 本地修改不想提交的情况下用stash暂存")]),t._v(" "),a("p",[t._v("暂存到本地")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("git stash save 'msg'\n")])])]),a("p",[t._v("场景：A在dev分支开发新的功能，突然大佬说要优先改个别的问题。新功能没开发完，不想提交。怎么办？\n这个时候就可以用stash把更改暂存本地 本地工作区clean之后就可以随意切换分支了\n"),a("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2021/png/292785/1621224060277-2b5cc94f-9496-48d0-97a6-fca3ee59ddb4.png#clientId=u09f03e4b-9868-4&from=paste&height=168&id=u3e9805a5&name=image.png&originHeight=335&originWidth=753&originalType=binary&ratio=1&rotation=0&showTitle=false&size=73049&status=done&style=none&taskId=u373077cb-0de8-447d-b07d-b6ec67593ec&title=&width=376.5",alt:"image.png"}}),t._v("\ngit stash list 可查看暂存的list\n"),a("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2021/png/292785/1621224081563-a0031304-aaec-4029-9f1b-66f065eea60b.png#clientId=u09f03e4b-9868-4&from=paste&height=44&id=u367e2a8a&name=image.png&originHeight=87&originWidth=525&originalType=binary&ratio=1&rotation=0&showTitle=false&size=10319&status=done&style=none&taskId=u6f13b225-cd05-4a3c-a160-7dc5fd841e8&title=&width=262.5",alt:"image.png"}}),t._v("\ngit stash pop stash@{id}  不写stash@{id} 默认pop最近的一次\n"),a("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2021/png/292785/1621224101912-45efce98-0ba0-49fd-9762-734d4ea66016.png#clientId=u09f03e4b-9868-4&from=paste&height=158&id=ue306c49e&name=image.png&originHeight=316&originWidth=729&originalType=binary&ratio=1&rotation=0&showTitle=false&size=62328&status=done&style=none&taskId=uccaaa0a1-12eb-4fcd-bfea-9c2fa3e520b&title=&width=364.5",alt:"image.png"}}),t._v("\n默认情况下，git stash会缓存下列文件：")]),t._v(" "),a("ul",[a("li",[t._v("添加到暂存区的修改（staged changes）")]),t._v(" "),a("li",[t._v("Git跟踪的但并未添加到暂存区的修改（unstaged changes）")]),t._v(" "),a("li",[t._v("但不会缓存一下文件：")]),t._v(" "),a("li",[t._v("在工作目录中新的文件（untracked files）")]),t._v(" "),a("li",[t._v("被忽略的文件（ignored files）")])]),t._v(" "),a("p",[t._v("git stash命令提供了参数用于缓存上面两种类型的文件。使用-u或者--include-untracked可以stash untracked文件。使用-a或者--all命令可以stash当前目录下的所有修改。\n至于git stash的其他命令建议参考Git manual。\n"),a("a",{attrs:{href:"https://www.cnblogs.com/tocy/p/git-stash-reference.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://www.cnblogs.com/tocy/p/git-stash-reference.html"),a("OutboundLink")],1)]),t._v(" "),a("h2",{attrs:{id:"merge-某些文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#merge-某些文件"}},[t._v("#")]),t._v(" merge 某些文件")]),t._v(" "),a("p",[a("code",[t._v("git checkout branch_name file_url")])]),t._v(" "),a("h2",{attrs:{id:"merge冲突部分以xx为准"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#merge冲突部分以xx为准"}},[t._v("#")]),t._v(" merge冲突部分以xx为准")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("git merge "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Xours dev # 冲突部分以当前分支为准\ngit merge "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Xtheirs dev # 冲突部分以待合并分支为准\n")])])]),a("h2",{attrs:{id:"合并commit"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#合并commit"}},[t._v("#")]),t._v(" 合并commit")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2022/png/292785/1648100941262-0a596426-4b04-4f36-b74b-bfeb2454c760.png#clientId=u1ef2e941-ab25-4&from=paste&height=284&id=u5b705155&name=image.png&originHeight=284&originWidth=1304&originalType=binary&ratio=1&rotation=0&showTitle=false&size=63198&status=done&style=none&taskId=ue39d5ed0-38fe-4d72-8f51-5a8e2a3ac0d&title=&width=1304",alt:"image.png"}}),t._v("\n现在我们在测试分支上添加了五次提交，我们的目标是把最后四个提交合并为一个提交")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("git rebase -i d661c52\n\npick：保留该commit（缩写:p）\nreword：保留该commit，但我需要修改该commit的注释（缩写:r）\nedit：保留该commit, 但我要停下来修改该提交(不仅仅修改注释)（缩写:e）\nsquash：将该commit和前一个commit合并（缩写:s）\nfixup：将该commit和前一个commit合并，但我不要保留该提交的注释信息（缩写:f）\nexec：执行shell命令（缩写:x）\ndrop：我要丢弃该commit（缩写:d）\n")])])]),a("p",[t._v("根据自己的需要修改注释 提交")]),t._v(" "),a("h2",{attrs:{id:"git-rebase-让你的提交记录更加清晰可读"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-rebase-让你的提交记录更加清晰可读"}},[t._v("#")]),t._v(" git rebase 让你的提交记录更加清晰可读")]),t._v(" "),a("p",[t._v("rebase 翻译为变基，他的作用和 merge 很相似，用于把一个分支的修改合并到当前分支上。"),a("a",{attrs:{href:"https://juejin.cn/post/6974184935804534815",target:"_blank",rel:"noopener noreferrer"}},[t._v("掘金"),a("OutboundLink")],1)])])}),[],!1,null,null,null);a.default=i.exports}}]);