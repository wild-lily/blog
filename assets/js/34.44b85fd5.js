(window.webpackJsonp=window.webpackJsonp||[]).push([[34],{307:function(t,e,a){"use strict";a.r(e);var s=a(14),r=Object(s.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h3",{attrs:{id:"vue在created和mounted这两个生命周期中请求数据有什么区别呢"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vue在created和mounted这两个生命周期中请求数据有什么区别呢"}},[t._v("#")]),t._v(" Vue在created和mounted这两个生命周期中请求数据有什么区别呢？")]),t._v(" "),e("h3",{attrs:{id:"v-model的原理是什么"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#v-model的原理是什么"}},[t._v("#")]),t._v(" v-model的原理是什么?")]),t._v(" "),e("h3",{attrs:{id:"说说你对keep-alive的理解"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#说说你对keep-alive的理解"}},[t._v("#")]),t._v(" 说说你对keep-alive的理解")]),t._v(" "),e("h3",{attrs:{id:"v-if和v-for的优先级是什么-如果这两个同时出现时-那应该怎么优化才能得到更好的性能"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#v-if和v-for的优先级是什么-如果这两个同时出现时-那应该怎么优化才能得到更好的性能"}},[t._v("#")]),t._v(" v-if和v-for的优先级是什么？如果这两个同时出现时，那应该怎么优化才能得到更好的性能？")]),t._v(" "),e("h3",{attrs:{id:"使用v-for遍历对象时-是按什么顺序遍历的-如何保证顺序"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#使用v-for遍历对象时-是按什么顺序遍历的-如何保证顺序"}},[t._v("#")]),t._v(" 使用v-for遍历对象时，是按什么顺序遍历的？如何保证顺序？")]),t._v(" "),e("h3",{attrs:{id:"按object-keys-的顺序的遍历-转成数组保证顺序"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#按object-keys-的顺序的遍历-转成数组保证顺序"}},[t._v("#")]),t._v(" 按Object.keys()的顺序的遍历，转成数组保证顺序")]),t._v(" "),e("h3",{attrs:{id:"在v-for中使用key-会提升性能吗-为什么"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#在v-for中使用key-会提升性能吗-为什么"}},[t._v("#")]),t._v(" 在v-for中使用key，会提升性能吗，为什么？")]),t._v(" "),e("h3",{attrs:{id:"key除了在v-for中使用-还有什么作用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#key除了在v-for中使用-还有什么作用"}},[t._v("#")]),t._v(" key除了在v-for中使用，还有什么作用？")]),t._v(" "),e("h3",{attrs:{id:"使用key要什么要注意的吗"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#使用key要什么要注意的吗"}},[t._v("#")]),t._v(" 使用key要什么要注意的吗？")]),t._v(" "),e("h3",{attrs:{id:"说说组件的命名规范"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#说说组件的命名规范"}},[t._v("#")]),t._v(" 说说组件的命名规范")]),t._v(" "),e("h3",{attrs:{id:"为什么组件中data必须用函数返回一个对象"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#为什么组件中data必须用函数返回一个对象"}},[t._v("#")]),t._v(" 为什么组件中data必须用函数返回一个对象？")]),t._v(" "),e("p",[t._v("对象为引用类型，当重用组件时，由于数据对象都指向同一个data对象，当在一个组件中修改data时，其他重用的组件中的data会同时被修改；而使用返回对象的函数，由于每次返回的都是一个新对象（Object的实例），引用地址不同，则不会出现这个问题。")]),t._v(" "),e("h3",{attrs:{id:"vue父子组件双向绑定的方法有哪些"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vue父子组件双向绑定的方法有哪些"}},[t._v("#")]),t._v(" Vue父子组件双向绑定的方法有哪些？")]),t._v(" "),e("ul",[e("li",[t._v('通过在父组件上自定义一个监听事件<myComponent @diy="handleDiy">'),t._v(",在子组件用this.$emit('diy',data)来触发这个diy事件，其中data为子组件向父组件通信的数据,在父组件中监听diy个事件时，可以通过$event访问data这个值。")]),t._v(" "),e("li",[t._v("通过在父组件上用修饰符.sync绑定一个数据"),e("myComponent",{attrs:{show:t.show},on:{"update:show":function(e){t.show=e}}}),t._v(",在子组件用this.$emit('update:show',data)来改变父组件中show的值。\n通过v-model。")],1)]),t._v(" "),e("h3",{attrs:{id:"组件的name选项有什么作用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#组件的name选项有什么作用"}},[t._v("#")]),t._v(" 组件的name选项有什么作用？")]),t._v(" "),e("ul",[e("li",[t._v("递归组件时，组件调用自身使用；")]),t._v(" "),e("li",[t._v("用is特殊特性和component内置组件标签时使用；")]),t._v(" "),e("li",[t._v("keep-alive内置组件标签中include 和exclude属性中使用。")])]),t._v(" "),e("h3",{attrs:{id:"什么是递归组件-举个例子说明下"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#什么是递归组件-举个例子说明下"}},[t._v("#")]),t._v(" 什么是递归组件？举个例子说明下？")]),t._v(" "),e("p",[t._v("递归引用可以理解为组件调用自身，在开发多级菜单组件时就会用到，调用前要先设置组件的name选项， 注意一定要配合v-if使用，避免形成死循环，用element-vue组件库中NavMenu导航菜单组件开发多级菜单为例：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('<template>\n    <el-submenu :index="menu.id" popper-class="layout-sider-submenu" :key="menu.id">\n        <template slot="title">\n            <Icon :type="menu.icon" v-if="menu.icon"/>\n            <span>{{menu.title}}</span>\n        </template>\n        <template v-for="(child,i) in menu.menus">\n            <side-menu-item v-if="Array.isArray(child.menus) && child.menus.length" :menu="child"></side-menu-item>\n            <el-menu-item :index="child.id" :key="child.id" v-else>\n                <Icon :type="child.icon" v-if="child.icon"/>\n                <span>{{child.title}}</span>\n            </el-menu-item>\n        </template>\n    </el-submenu>\n</template>\n<script>\n    export default{\n        name: \'sideMenuItem\',\n        props: {\n            menu: {\n                type: Object,\n                default(){\n                    return {};\n                }\n            }\n        }\n    }\n<\/script>\n')])])]),e("h3",{attrs:{id:"说说你对slot的理解-slot使用场景有哪些"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#说说你对slot的理解-slot使用场景有哪些"}},[t._v("#")]),t._v(" 说说你对slot的理解？slot使用场景有哪些？")]),t._v(" "),e("h3",{attrs:{id:"说下-attrs和-listeners的使用场景"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#说下-attrs和-listeners的使用场景"}},[t._v("#")]),t._v(" 说下$attrs和$listeners的使用场景？")]),t._v(" "),e("p",[t._v('$attrs: 包含了父作用域中（组件标签）不作为 prop 被识别 (且获取) 的特性绑定 (class 和 style 除外)。\n在创建基础组件时候经常使用，可以和组件选项inheritAttrs:false和配合使用在组件内部标签上用v-bind="$attrs"将非prop特性绑定上去；\n$listeners: 包含了父作用域中（组件标签）的 (不含.native) v-on 事件监听器。\n在组件上监听一些特定的事件，比如focus事件时，如果组件的根元素不是表单元素的，则监听不到，那么可以用v-on="$listeners"绑定到表单元素标签上解决。')]),t._v(" "),e("h3",{attrs:{id:"说说你对provide和inject的理解"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#说说你对provide和inject的理解"}},[t._v("#")]),t._v(" 说说你对provide和inject的理解")]),t._v(" "),e("h3",{attrs:{id:"eventbus注册在全局上时-路由切换时会重复触发事件-如何解决呢"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#eventbus注册在全局上时-路由切换时会重复触发事件-如何解决呢"}},[t._v("#")]),t._v(" EventBus注册在全局上时，路由切换时会重复触发事件，如何解决呢？")]),t._v(" "),e("p",[t._v("在有使用$on的组件中要在beforeDestroy钩子函数中用$off销毁。")]),t._v(" "),e("h3",{attrs:{id:"vue组件里写的原生addeventlisteners监听事件-要手动去销毁吗-为什么"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vue组件里写的原生addeventlisteners监听事件-要手动去销毁吗-为什么"}},[t._v("#")]),t._v(" Vue组件里写的原生addEventListeners监听事件，要手动去销毁吗？为什么？")]),t._v(" "),e("p",[t._v("要，不然会造成多次绑定和内存泄露。关于移除事件监听的坑。")]),t._v(" "),e("h3",{attrs:{id:"vue组件里的定时器要怎么销毁"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vue组件里的定时器要怎么销毁"}},[t._v("#")]),t._v(" Vue组件里的定时器要怎么销毁？")]),t._v(" "),e("p",[t._v("如果页面上有很多定时器，可以在data选项中创建一个对象timer，给每个定时器取个名字一一映射在对象timer中，\n在beforeDestroy构造函数中for(let k in this.timer){clearInterval(k)}；\n如果页面只有单个定时器，可以这么做。\nconst timer = setInterval(() =>{}, 500);\nthis.$once('hook:beforeDestroy', () => {\nclearInterval(timer);\n})")]),t._v(" "),e("h3",{attrs:{id:"vue中能监听到数组变化的方法有哪些-为什么这些方法能监听到呢"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vue中能监听到数组变化的方法有哪些-为什么这些方法能监听到呢"}},[t._v("#")]),t._v(" Vue中能监听到数组变化的方法有哪些？为什么这些方法能监听到呢？")]),t._v(" "),e("p",[t._v("push()、pop()、shift()、unshift()、splice()、sort()、reverse()，这些方法在Vue中被重新定义了，故可以监听到数组变化；\nfilter()、concat()、slice()，这些方法会返回一个新数组，也可以监听到数组的变化。")]),t._v(" "),e("h3",{attrs:{id:"在vue中那些数组变化无法监听-为什么-怎么解决"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#在vue中那些数组变化无法监听-为什么-怎么解决"}},[t._v("#")]),t._v(" 在Vue中那些数组变化无法监听，为什么，怎么解决？")]),t._v(" "),e("p",[t._v("利用索引直接设置一个数组项时；\n修改数组的长度时。\n第一个情况，利用已有索引直接设置一个数组项时Object.defineProperty()是可以监听到，利用不存在的索引直接设置一个数组项时Object.defineProperty()是不可以监听到，但是官方给出的解释是由于JavaScript的限制，Vue不能检测以上数组的变动，其实根本原因是性能问题，性能代价和获得的用户体验收益不成正比。\n第二个情况，原因是Object.defineProperty()不能监听到数组的length属性。\n用this.$set(this.items, indexOfItem, newValue)或this.items.splice(indexOfItem, 1, newValue)来解决第一种情况；\nthis.items.splice(newLength)来解决第二种情况。")]),t._v(" "),e("h3",{attrs:{id:"在vue中那些对象变化无法监听-为什么-怎么解决"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#在vue中那些对象变化无法监听-为什么-怎么解决"}},[t._v("#")]),t._v(" 在Vue中那些对象变化无法监听，为什么，怎么解决？")]),t._v(" "),e("ul",[e("li",[t._v("对象属性的添加")]),t._v(" "),e("li",[t._v("对象属性的删除\n因为Vue是通过Object.defineProperty来将对象的key转成getter/setter的形式来追踪变化，但getter/setter只能追踪一个数据是否被修改，无法追踪新增属性和删除属性，所以才会导致上面对象变化无法监听。")]),t._v(" "),e("li",[t._v('用this.$set(this.obj,"key","newValue")来解决第一种情况')]),t._v(" "),e("li",[t._v("用Object.assign来解决第二种情况。")])]),t._v(" "),e("h3",{attrs:{id:"删除对象用delete和vue-delete有什么区别"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#删除对象用delete和vue-delete有什么区别"}},[t._v("#")]),t._v(" 删除对象用delete和Vue.delete有什么区别？")]),t._v(" "),e("ul",[e("li",[t._v("delete：只是被删除对象成员变为' '或undefined，其他元素键值不变；")]),t._v(" "),e("li",[t._v("Vue.delete：直接删了对象成员，如果对象是响应式的，确保删除能触发更新视图，这个方法主要用于避开 Vue 不能检测到属性被删除的限制。")])]),t._v(" "),e("h3",{attrs:{id:"watch和计算属性有什么区别"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#watch和计算属性有什么区别"}},[t._v("#")]),t._v(" watch和计算属性有什么区别？")]),t._v(" "),e("ul",[e("li",[t._v("watch：一个数据影响多个数据，当需要在数据变化时执行异步或开销较大的操作时；")]),t._v(" "),e("li",[t._v("计算属性：一个数据受多个数据影响。是基于它的响应式依赖进行缓存的，只在相关响应式依赖发生改变时它才会重新求值。")])]),t._v(" "),e("h3",{attrs:{id:"计算属性和方法有什么区别"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#计算属性和方法有什么区别"}},[t._v("#")]),t._v(" 计算属性和方法有什么区别？")]),t._v(" "),e("ul",[e("li",[t._v("计算属性：是基于它们的响应式依赖进行缓存的，只在相关响应式依赖发生改变时它们才会重新求值。")]),t._v(" "),e("li",[t._v("方法：每当触发重新渲染时，调用方法将总会再次执行函数。当我们不希望有缓存，可以使用方法，但是如果求值开销大时建议用计算属性。")])]),t._v(" "),e("h3",{attrs:{id:"过渡动画实现的方式有哪些"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#过渡动画实现的方式有哪些"}},[t._v("#")]),t._v(" 过渡动画实现的方式有哪些")]),t._v(" "),e("h3",{attrs:{id:"你有写过自定义指令吗-自定义指令的生命周期-钩子函数-有哪些"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#你有写过自定义指令吗-自定义指令的生命周期-钩子函数-有哪些"}},[t._v("#")]),t._v(" 你有写过自定义指令吗？自定义指令的生命周期（钩子函数）有哪些？")]),t._v(" "),e("h3",{attrs:{id:"手写一个自定义指令及写出如何调用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#手写一个自定义指令及写出如何调用"}},[t._v("#")]),t._v(" 手写一个自定义指令及写出如何调用")]),t._v(" "),e("h3",{attrs:{id:"vue怎么定义全局方法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vue怎么定义全局方法"}},[t._v("#")]),t._v(" Vue怎么定义全局方法")]),t._v(" "),e("p",[t._v("1.挂载在Vue的prototype上")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("// base.js\nconst install = function (Vue, opts) {\n    Vue.prototype.demo = function () {\n        console.log('我已经在Vue原型链上')\n    }\n}\nexport default {\n    install\n}\n")])])]),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("//main.js\n//注册全局函数\nimport base from 'service/base';\nVue.use(base);\n")])])]),e("p",[t._v("2.利用全局混入mixin\n3.用this.$root.$on绑定方法，用this.$root.$off解绑方法，用this.$root.$emit全局调用")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("this.$root.$on('demo',function(){\n    console.log('test');\n})\nthis.$root.$emit('demo')；\nthis.$root.$off('demo')；\n")])])]),e("h3",{attrs:{id:"说说你对dom选项el、template、render的理解"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#说说你对dom选项el、template、render的理解"}},[t._v("#")]),t._v(" 说说你对DOM选项el、template、render的理解？")]),t._v(" "),e("h3",{attrs:{id:"有什么用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#有什么用"}},[t._v("#")]),t._v(" "),void 0,t._v("有什么用")],2),t._v(" "),e("p",[t._v("当做一个不可见的包裹元素，减少不必要的DOM元素，整个结构会更加清晰。")]),t._v(" "),e("h4",{attrs:{id:"vue怎么改变插入模板的分隔符"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vue怎么改变插入模板的分隔符"}},[t._v("#")]),t._v(" Vue怎么改变插入模板的分隔符")]),t._v(" "),e("p",[t._v('用delimiters选项,其默认是["'+t._s(", ")+'"]')]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("// 将分隔符变成ES6模板字符串的风格\nnew Vue({\n  delimiters: ['${', '}']\n})\n")])])]),e("h3",{attrs:{id:"vue变量名如果以-、-开头的属性会发生什么问题-怎么访问到它们的值"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vue变量名如果以-、-开头的属性会发生什么问题-怎么访问到它们的值"}},[t._v("#")]),t._v(" Vue变量名如果以_、$开头的属性会发生什么问题？怎么访问到它们的值？")]),t._v(" "),e("p",[t._v("以 _ 或 $ 开头的属性 不会 被 Vue 实例代理，因为它们可能和 Vue 内置的属性、API 方法冲突，你可以使用例如 vm.$data._property 的方式访问这些属性")]),t._v(" "),e("h3",{attrs:{id:"怎么捕获vue组件的错误信息"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#怎么捕获vue组件的错误信息"}},[t._v("#")]),t._v(" 怎么捕获Vue组件的错误信息？")]),t._v(" "),e("p",[t._v("errorCaptured是组件内部钩子，当捕获一个来自子孙组件的错误时被调用，接收error、vm、info三个参数，return false后可以阻止错误继续向上抛出。\nerrorHandler为全局钩子，使用Vue.config.errorHandler配置，接收参数与errorCaptured一致，2.6后可捕捉v-on与promise链的错误，可用于统一错误处理与错误兜底。")]),t._v(" "),e("h3",{attrs:{id:"vue-observable"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vue-observable"}},[t._v("#")]),t._v(" Vue.observable")]),t._v(" "),e("p",[t._v("让一个对象可响应。可以作为最小化的跨组件状态存储器。")]),t._v(" "),e("h3",{attrs:{id:"vue项目中如何配置favicon"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vue项目中如何配置favicon"}},[t._v("#")]),t._v(" Vue项目中如何配置favicon？")]),t._v(" "),e("p",[t._v("静态配置 "),e("link",{attrs:{rel:"icon",href:"<%= BASE_URL %>favicon.ico"}}),t._v(",\n其中<%= BASE_URL %>等同vue.config.js中publicPath的配置;\n动态配置"),e("link",{attrs:{rel:"icon",type:"image/png",href:""}})]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("import browserImg from 'images/kong.png';//为favicon的默认图片\nconst imgurl ='后端传回来的favicon.ico的线上地址'\nlet link = document.querySelector('link[type=\"image/png\"]');\nif (imgurl) {\n    link.setAttribute('href', imgurl);\n} else {\n    link.setAttribute('href', browserImg);\n}\n")])])]),e("h3",{attrs:{id:"怎么修改vue项目打包后生成文件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#怎么修改vue项目打包后生成文件"}},[t._v("#")]),t._v(" 怎么修改Vue项目打包后生成文件")]),t._v(" "),e("p",[t._v("在Vue CLI2中修改config/index.js文件中的build.assetsPublicPath的值；\n在Vue CLI3中配置publicPath的值。")]),t._v(" "),e("h3",{attrs:{id:"怎么解决vue项目打包后静态资源图片失效的问题"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#怎么解决vue项目打包后静态资源图片失效的问题"}},[t._v("#")]),t._v(" 怎么解决Vue项目打包后静态资源图片失效的问题？")]),t._v(" "),e("p",[t._v("在项目中一般通过配置alias路径别名的方式解决,下面是Vue CLI3的配置。")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("configureWebpack: {\n    resolve: {\n        extensions: ['.js', '.vue', '.json'],\n        alias: {\n            '@': resolve('src'),\n            'assets': resolve('src/assets'),\n            'css': resolve('src/assets/css'),\n            'images': resolve('src/assets/images'),\n        }\n    },\n}\n")])])]),e("h3",{attrs:{id:"怎么解决vue中动态设置img的src不生效的问题"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#怎么解决vue中动态设置img的src不生效的问题"}},[t._v("#")]),t._v(" 怎么解决Vue中动态设置img的src不生效的问题？")]),t._v(" "),e("p",[t._v("因为动态添加src被当做静态资源处理了，没有进行编译，所以要加上require。")]),t._v(" "),e("div",{staticClass:"language-javascript extra-class"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("template"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("img "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"logo"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("src"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"logo"')]),t._v(" alt"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"公司logo"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("template"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("script"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("data")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("logo")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"assets/images/logo.png"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("script"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),e("h3",{attrs:{id:"在vue项目中如何引入第三方库-比如jquery-有哪些方法可以做到、"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#在vue项目中如何引入第三方库-比如jquery-有哪些方法可以做到、"}},[t._v("#")]),t._v(" 在Vue项目中如何引入第三方库（比如jQuery）？有哪些方法可以做到、")]),t._v(" "),e("h3",{attrs:{id:"在vue中如果引用一个js文件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#在vue中如果引用一个js文件"}},[t._v("#")]),t._v(" 在vue中如果引用一个js文件")]),t._v(" "),e("p",[t._v("index,html script直接引用")])])}),[],!1,null,null,null);e.default=r.exports}}]);